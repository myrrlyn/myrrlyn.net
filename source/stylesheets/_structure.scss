* {
	box-sizing: border-box;
}

//  Ensure that the body will always be rendered to the full height of the
//  viewport, even if the content is short enough that the body would not
//  ordinarily reach the bottom.
html {
	height: 100%;
}
body {
	min-height: 100%;
}

.flex-wrapper {
	@media all and (min-width: map-get($breakpoints, 'small+')) {
		@include flex-wrapper;
	}
}

.flex-rows {
	flex: {
		direction: column;
		wrap: wrap;
	}
}

.flex-cols {
	flex: {
		direction: row;
		wrap: wrap;
	}
}

#flex-focus {
	flex: {
		grow: 1;
		shrink: 0;
		basis: auto;
	}
	justify-content: center;
	margin: {
		left: auto;
		right: auto;
	}
	max-width: $content-width-max;
}

.flex-item {
	flex: {
		basis: 100%;
	}
}

#about {
	@media only screen and (min-width: map-get($breakpoints, 'small+')) {
		flex: 1.75 1 0%;
	}
	@media only screen and (min-width: map-get($breakpoints, 'large+')) {
		order: 1;
	}
}
#nav {
	@media only screen and (min-width: map-get($breakpoints, 'small+')) {
		flex: 1.25 2 0%;
	}
	@media only screen and (min-width: map-get($breakpoints, 'large+')) {
		order: 3;
	}
}

main.flex-item {
	@media only screen and (min-width: map-get($breakpoints, 'large+')) {
		flex: 4 0 0%;
		order: 2;
	}
}

footer .flex-item {
	flex: 1 0 0%;
	height: 1em;
}

body.hide-panels {
	#about,
	#nav,
	#anchor-wrap,
	header,
	footer {
		display: none;
	}
}

@media only screen
and (min-width: map-get($breakpoints, 'large+'))
and (min-height: 800px) {
	body:not(.hide-panels) #flex-focus {
		height: calc(100vh - #{core-height()});
	}
	main, #about, #nav {
		overflow-y: auto;
		height: inherit;
	}
}

button#decorator-toggle {
	@include screen-only;
	@media only screen and (max-width: map-get($breakpoints, 'large-')) {
		display: none;
	}
	float: right;
	margin-top: 5px;
}
